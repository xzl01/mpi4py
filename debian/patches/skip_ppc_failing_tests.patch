Index: mpi4py/test/test_datatype.py
===================================================================
--- mpi4py.orig/test/test_datatype.py	2024-09-10 21:52:27.161988233 +0200
+++ mpi4py/test/test_datatype.py	2024-09-10 21:52:27.161988233 +0200
@@ -2,6 +2,9 @@
 import mpiunittest as unittest
 import struct
 
+import platform
+test_machine = platform.machine()
+
 datatypes_c = [
 MPI.CHAR, MPI.WCHAR,
 MPI.SIGNED_CHAR, MPI.SHORT, MPI.INT, MPI.LONG,
@@ -166,6 +169,7 @@
         for dtype in datatypes:
             dtype.Commit()
 
+    @unittest.skipIf('ppc' in test_machine, "testCodeCharStr fails on ppc arches")
     def testCodeCharStr(self):
         f90datatypes = []
         try:
@@ -459,6 +463,7 @@
 
     @unittest.skipMPI('openmpi(<3.0.0)')
     @unittest.skipMPI('msmpi')
+    @unittest.skipIf('ppc' in test_machine, "testF90RealDouble fails on ppc arches")
     def testF90RealDouble(self):
         (p, r) = (15, 300)
         factory = MPI.Datatype.Create_f90_real
@@ -475,6 +480,7 @@
 
     @unittest.skipMPI('openmpi(<3.0.0)')
     @unittest.skipMPI('msmpi')
+    @unittest.skipIf('ppc' in test_machine, "testF90ComplexDouble fails on ppc arches")
     def testF90ComplexDouble(self):
         (p, r) = (15, 300)
         factory = MPI.Datatype.Create_f90_complex
Index: mpi4py/test/test_spawn.py
===================================================================
--- mpi4py.orig/test/test_spawn.py	2024-09-10 21:52:27.161988233 +0200
+++ mpi4py/test/test_spawn.py	2024-09-10 21:53:45.562711642 +0200
@@ -2,6 +2,8 @@
 import mpiunittest as unittest
 import sys, os, mpi4py
 
+import platform
+
 MPI4PYPATH = os.path.abspath(
     os.path.dirname(mpi4py.__path__[0])
 )
@@ -254,6 +256,7 @@
                 self.assertEqual(errcode, MPI.SUCCESS)
 
     @unittest.skipMPI('msmpi')
+    @unittest.skipIf(platform.machine() == 'ppc', "testArgsOnlyAtRoot fails on powerpc")
     def testArgsOnlyAtRoot(self):
         self.COMM.Barrier()
         if self.COMM.Get_rank() == self.ROOT:
